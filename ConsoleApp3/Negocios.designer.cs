#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Negocios")]
	public partial class NegociosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertPRODUCTO(PRODUCTO instance);
    partial void UpdatePRODUCTO(PRODUCTO instance);
    partial void DeletePRODUCTO(PRODUCTO instance);
    partial void InsertCATEGORIA(CATEGORIA instance);
    partial void UpdateCATEGORIA(CATEGORIA instance);
    partial void DeleteCATEGORIA(CATEGORIA instance);
    #endregion
		
		public NegociosDataContext() : 
				base(global::ConsoleApp3.Properties.Settings.Default.NegociosConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NegociosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NegociosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NegociosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NegociosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PRODUCTO> PRODUCTO
		{
			get
			{
				return this.GetTable<PRODUCTO>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORIA> CATEGORIA
		{
			get
			{
				return this.GetTable<CATEGORIA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCTO")]
	public partial class PRODUCTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProducto;
		
		private string _NombreProducto;
		
		private System.Nullable<int> _IdProveedor;
		
		private System.Nullable<int> _IdCategoria;
		
		private string _umedida;
		
		private decimal _PrecioUnidad;
		
		private short _UnidadesEnExistencia;
		
		private EntityRef<CATEGORIA> _CATEGORIA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductoChanging(int value);
    partial void OnIdProductoChanged();
    partial void OnNombreProductoChanging(string value);
    partial void OnNombreProductoChanged();
    partial void OnIdProveedorChanging(System.Nullable<int> value);
    partial void OnIdProveedorChanged();
    partial void OnIdCategoriaChanging(System.Nullable<int> value);
    partial void OnIdCategoriaChanged();
    partial void OnumedidaChanging(string value);
    partial void OnumedidaChanged();
    partial void OnPrecioUnidadChanging(decimal value);
    partial void OnPrecioUnidadChanged();
    partial void OnUnidadesEnExistenciaChanging(short value);
    partial void OnUnidadesEnExistenciaChanged();
    #endregion
		
		public PRODUCTO()
		{
			this._CATEGORIA = default(EntityRef<CATEGORIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this.OnIdProductoChanging(value);
					this.SendPropertyChanging();
					this._IdProducto = value;
					this.SendPropertyChanged("IdProducto");
					this.OnIdProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProducto", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string NombreProducto
		{
			get
			{
				return this._NombreProducto;
			}
			set
			{
				if ((this._NombreProducto != value))
				{
					this.OnNombreProductoChanging(value);
					this.SendPropertyChanging();
					this._NombreProducto = value;
					this.SendPropertyChanged("NombreProducto");
					this.OnNombreProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProveedor", DbType="Int")]
		public System.Nullable<int> IdProveedor
		{
			get
			{
				return this._IdProveedor;
			}
			set
			{
				if ((this._IdProveedor != value))
				{
					this.OnIdProveedorChanging(value);
					this.SendPropertyChanging();
					this._IdProveedor = value;
					this.SendPropertyChanged("IdProveedor");
					this.OnIdProveedorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int")]
		public System.Nullable<int> IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					if (this._CATEGORIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_umedida", DbType="VarChar(100)")]
		public string umedida
		{
			get
			{
				return this._umedida;
			}
			set
			{
				if ((this._umedida != value))
				{
					this.OnumedidaChanging(value);
					this.SendPropertyChanging();
					this._umedida = value;
					this.SendPropertyChanged("umedida");
					this.OnumedidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioUnidad", DbType="Decimal(10,0) NOT NULL")]
		public decimal PrecioUnidad
		{
			get
			{
				return this._PrecioUnidad;
			}
			set
			{
				if ((this._PrecioUnidad != value))
				{
					this.OnPrecioUnidadChanging(value);
					this.SendPropertyChanging();
					this._PrecioUnidad = value;
					this.SendPropertyChanged("PrecioUnidad");
					this.OnPrecioUnidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnidadesEnExistencia", DbType="SmallInt NOT NULL")]
		public short UnidadesEnExistencia
		{
			get
			{
				return this._UnidadesEnExistencia;
			}
			set
			{
				if ((this._UnidadesEnExistencia != value))
				{
					this.OnUnidadesEnExistenciaChanging(value);
					this.SendPropertyChanging();
					this._UnidadesEnExistencia = value;
					this.SendPropertyChanged("UnidadesEnExistencia");
					this.OnUnidadesEnExistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_PRODUCTO", Storage="_CATEGORIA", ThisKey="IdCategoria", OtherKey="IdCategoria", IsForeignKey=true)]
		public CATEGORIA CATEGORIA
		{
			get
			{
				return this._CATEGORIA.Entity;
			}
			set
			{
				CATEGORIA previousValue = this._CATEGORIA.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORIA.Entity = null;
						previousValue.PRODUCTO.Remove(this);
					}
					this._CATEGORIA.Entity = value;
					if ((value != null))
					{
						value.PRODUCTO.Add(this);
						this._IdCategoria = value.IdCategoria;
					}
					else
					{
						this._IdCategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("CATEGORIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIA")]
	public partial class CATEGORIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategoria;
		
		private string _NombreCategoria;
		
		private string _Descripcion;
		
		private EntitySet<PRODUCTO> _PRODUCTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoriaChanging(int value);
    partial void OnIdCategoriaChanged();
    partial void OnNombreCategoriaChanging(string value);
    partial void OnNombreCategoriaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public CATEGORIA()
		{
			this._PRODUCTO = new EntitySet<PRODUCTO>(new Action<PRODUCTO>(this.attach_PRODUCTO), new Action<PRODUCTO>(this.detach_PRODUCTO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategoria", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCategoria
		{
			get
			{
				return this._IdCategoria;
			}
			set
			{
				if ((this._IdCategoria != value))
				{
					this.OnIdCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IdCategoria = value;
					this.SendPropertyChanged("IdCategoria");
					this.OnIdCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCategoria", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NombreCategoria
		{
			get
			{
				return this._NombreCategoria;
			}
			set
			{
				if ((this._NombreCategoria != value))
				{
					this.OnNombreCategoriaChanging(value);
					this.SendPropertyChanging();
					this._NombreCategoria = value;
					this.SendPropertyChanged("NombreCategoria");
					this.OnNombreCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORIA_PRODUCTO", Storage="_PRODUCTO", ThisKey="IdCategoria", OtherKey="IdCategoria")]
		public EntitySet<PRODUCTO> PRODUCTO
		{
			get
			{
				return this._PRODUCTO;
			}
			set
			{
				this._PRODUCTO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTO(PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = this;
		}
		
		private void detach_PRODUCTO(PRODUCTO entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORIA = null;
		}
	}
}
#pragma warning restore 1591
